- file:
    path: '/usr/local/etc/ansible/facts.d'
    state: directory
  become: yes
- copy:
    dest: '/usr/local/etc/ansible/facts.d/pot.fact'
    src: 'pot_local.fact'
    mode: '0755'
  become: yes

- name: Installing Pot
  community.general.pkgng:
    name: pot
    state: present

- name: Gathering Facts
  setup:
    filter: ansible_local

- block:
  - name: enable pot service
    community.general.sysrc:
      name: pot_enable
      value: YES
  - name: create pot config
    template:
      src: pot.conf.j2
      dest: /usr/local/etc/pot/pot.conf
      mode: 0644
  - name: initialize pot
    shell: pot init
  - name: refresh facts
    setup:
      filter: ansible_local
  when:
  - pot.enabled|bool
  - not potintel.initialized|bool

- block:
  - name: de-initialize pot
    shell: pot de-init
  - name: disable pot service
    community.general.sysrc:
      name: pot_enable
      state: absent
  - name: refresh facts
    setup:
      filter: ansible_local
  when:
  - not pot.enabled|bool
  - potintel.initialized|bool

- block:
  - name: initialize vnet
    file:
      path: '/usr/local/etc/ansible/.pot_vnet_init'
      state: touch
  - shell: pot vnet-start
  - setup:
      filter: ansible_local
  when:
  - pot.enabled|bool
  - pot.vnet_enabled|bool
  - not potintel.vnet_initialized|bool

- block:
  - name: configuring bridges
    include_tasks: bridge.yml
    with_items: '{{ pot.bridges }}'
    loop_control:
      loop_var: selectedbridge
  - name: refresh facts
    setup:
      filter: ansible_local
  when:
  - pot.enabled|bool
  - potintel.initialized|bool
  - not selectedbridge.ignore|default(false)|bool

- block:
  - name: configure fs components
    include_tasks: fscomp.yml
    with_items: '{{ pot.fscomps }}'
    loop_control:
      loop_var: selectedfscomp
  - name: refresh facts
    setup:
      filter: ansible_local
  when:
  - pot.enabled|bool
  - potintel.initialized|bool
  - not selectedfscomp.ignore|default(false)|bool

- block:
  - name: configuring bases
    include_tasks: base.yml
    with_items: '{{ pot.bases }}'
    loop_control:
      loop_var: selectedbase
  - name: refresh facts
    setup:
      filter: ansible_local
  when:
  - pot.enabled|bool
  - potintel.initialized|bool
  - not selectedbase.ignore|default(false)|bool

- block:
  - name: configuring jails
    include_tasks: jail.yml
    with_items: '{{ pot.pots }}'
    loop_control:
      loop_var: selectedjail
  - name: refresh facts
    setup:
      filter: ansible_local
  when:
  - pot.enabled|bool
  - potintel.initialized|bool
  - not selectedjail.ignore|default(false)|bool
